import { Logger, ValidationPipe } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app/app.module';

// ‚úÖ –§–∏–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ KYC-–ø–æ—Ç–æ–∫–∞
// 	1.	üë§ –Æ–∑–µ—Ä –ª–æ–≥–∏–Ω–∏—Ç—Å—è —á–µ—Ä–µ–∑ Public API
// 	‚Ä¢	–ü–æ–ª—É—á–∞–µ—Ç accessToken, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö.
// 	2.	üì© –Æ–∑–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–æ–ª—å Property Owner
// 	‚Ä¢	–î–µ–ª–∞–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å –Ω–∞ KYC-—Å–µ—Ä–≤–∏—Å (—á–µ—Ä–µ–∑ gateway/proxy public ‚Üí kyc).
// 	‚Ä¢	–ü—Ä–∏–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω (JWT).
// 	3.	üîê KYC-—Å–µ—Ä–≤–∏—Å –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω
// 	‚Ä¢	–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ JWT_SECRET, —á—Ç–æ –∏ Public API.
// 	‚Ä¢	–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç userId, email, role –∏–∑ —Ç–æ–∫–µ–Ω–∞.
// 	4.	üóÉÔ∏è KYC-—Å–µ—Ä–≤–∏—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Å–≤–æ—é –±–∞–∑—É
// 	‚Ä¢	–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞: pending.
// 	‚Ä¢	–°–≤—è–∑–∫–∞ userId + –ø—Ä–∏—á–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞.
// 	5.	üì§ KYC –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–≤–µ–Ω—Ç –≤ Kafka: kyc.request.created
// 	‚Ä¢	–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏:
// 	‚Ä¢	NotificationService (—É–≤–µ–¥–æ–º–ª—è–µ—Ç —é–∑–µ—Ä–∞ / –∞–¥–º–∏–Ω–∞).
// 	‚Ä¢	AdminService (–ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç –∑–∞—è–≤–∫—É –≤ –∞–¥–º–∏–Ω–∫—É).
// 	6.	üßë‚Äçüíº –ê–¥–º–∏–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ Admin-–ø–∞–Ω–µ–ª—å
// 	‚Ä¢	–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTTP-–∑–∞–ø—Ä–æ—Å –Ω–∞ KYC: /kyc/:id/decision
// 	‚Ä¢	Payload: { status: 'approved' | 'rejected', adminId }.
// 	7.	üì§ KYC –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–≤–∞ Kafka –∏–≤–µ–Ω—Ç–∞:
// 	‚Ä¢	kyc.status.updated ‚Üí Public API
// 	‚Ä¢	Public –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (property_owner) –∏–ª–∏ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç.
// 	‚Ä¢	kyc.status.updated ‚Üí NotificationService
// 	‚Ä¢	–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email/SMS —é–∑–µ—Ä—É –æ —Ä–µ—à–µ–Ω–∏–∏.

// ‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã

// createMicroservice() vs create()
// createMicroservice() - –¥–ª—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤, –Ω–æ –∏–∑ –º–∏–Ω—É—Å–æ–≤ —ç—Ç–æ –æ—Ç—Å—É—Ç—Å–≤–∏–µ HTTP, –∏ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ nginx/aws
// create() - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –∏–∑ –º–∏–Ω—É—Å–æ–≤ —ç—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –Ω—É–∂–Ω–∞ –¥–ª—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤, –∏ —Ç–æ —á—Ç–æ –ø–æ –ø–∞–º—è—Ç–∏ –Ω–µ–º–Ω–æ–≥–æ —Ç—è–∂–µ–ª–µ–µ

// noAck true ( which is default ) options is used to disable message acknowledgement, so that the message is not removed from the queue until the consumer acknowledges it
// *message acknowledgement* - is a process of confirming that the message has been processed successfully.

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const globalPrefix = 'api/kyc';
  app.setGlobalPrefix(globalPrefix);
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
    })
  );
  const port = parseInt(process.env.PORT || '3001', 10);
  await app.listen(port);
  Logger.log(
    `üöÄ Application is running on: http://localhost:${port}/${globalPrefix}`
  );
}

bootstrap();
