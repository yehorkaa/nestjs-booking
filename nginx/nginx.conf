events {
  worker_connections 1024;
}

http {
  resolver 127.0.0.11; # Docker DNS resolver, needed for host.docker.internal and to don't crush nginx in case there is no connection

  server {
    listen 80;
    server_name localhost;

    location /api/public/kyc/ {
      rewrite ^/api/public/kyc(/.*)$ /api/kyc$1 break;
      proxy_pass http://host.docker.internal:3001;
      proxy_set_header Host $host;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/public/notifications/ {
      rewrite ^/api/public/notifications(/.*)$ /api/notifications$1 break;
      proxy_pass http://host.docker.internal:3002;
      proxy_set_header Host $host;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/public/ {
      proxy_pass http://host.docker.internal:3000;
      proxy_set_header Host $host;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Default location for health checks
    location / {
      return 200 'nginx is running';
      add_header Content-Type text/plain;
    }
  }
}